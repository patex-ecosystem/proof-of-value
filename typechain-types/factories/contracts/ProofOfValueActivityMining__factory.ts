/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ProofOfValueActivityMining,
  ProofOfValueActivityMiningInterface,
} from "../../contracts/ProofOfValueActivityMining";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_blackList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_lastBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "adminAddBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "adminRemoveBlackList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "rewardAccounts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cff380380610cff83398101604081905261002f916100bc565b61003f61003a610068565b61006c565b60018055600280546001600160a01b0319166001600160a01b03929092169190911790556100ea565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100cd578081fd5b81516001600160a01b03811681146100e3578182fd5b9392505050565b610c06806100f96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637c0cd931116100715780637c0cd9311461011c5780638da5cb5b1461012f578063b59c6e0e14610144578063f2fde38b1461014c578063f5ec54031461015f578063f712b27914610172576100a9565b80634e71d92d146100ae5780635252a359146100b8578063595dec3c146100cb5780636ebcf607146100f4578063715018a614610114575b600080fd5b6100b661017a565b005b6100b66100c63660046108b5565b6102d8565b6100de6100d9366004610887565b6103c3565b6040516100eb91906109cb565b60405180910390f35b610107610102366004610887565b6103d8565b6040516100eb9190610b7e565b6100b66103ea565b6100b661012a3660046108f5565b6103fc565b610137610637565b6040516100eb919061099e565b610137610646565b6100b661015a366004610887565b610655565b6100b661016d3660046108b5565b61068f565b610107610775565b61018261077b565b336000818152600460205260409020546101b75760405162461bcd60e51b81526004016101ae90610b24565b60405180910390fd5b6001600160a01b03811660009081526005602052604090205460ff16156101f05760405162461bcd60e51b81526004016101ae90610a47565b6001600160a01b0380821660009081526004602081905260408083208054939055600254905163a9059cbb60e01b81529293169163a9059cbb916102389186918691016109b2565b602060405180830381600087803b15801561025257600080fd5b505af1158015610266573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028a9190610966565b50816001600160a01b03167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4826040516102c49190610b7e565b60405180910390a250506102d66107a5565b565b6102e06107ab565b60005b818110156103be57600083838381811061030d57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906103229190610887565b6001600160a01b031614156103495760405162461bcd60e51b81526004016101ae90610ad0565b60016005600085858581811061036f57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906103849190610887565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806103b681610b9f565b9150506102e3565b505050565b60056020526000908152604090205460ff1681565b60046020526000908152604090205481565b6103f26107ab565b6102d660006107ea565b6104046107ab565b8382146104235760405162461bcd60e51b81526004016101ae90610a6b565b6003548110156104455760405162461bcd60e51b81526004016101ae906109d6565b60038190556000805b8581101561058f57600087878381811061047857634e487b7160e01b600052603260045260246000fd5b905060200201602081019061048d9190610887565b6001600160a01b031614156104b45760405162461bcd60e51b81526004016101ae90610ad0565b8484828181106104d457634e487b7160e01b600052603260045260246000fd5b90506020020135600460008989858181106104ff57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906105149190610887565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546105439190610b87565b90915550859050848281811061056957634e487b7160e01b600052603260045260246000fd5b905060200201358261057b9190610b87565b91508061058781610b9f565b91505061044e565b506002546040516370a0823160e01b81526001600160a01b03909116906370a08231906105c090309060040161099e565b60206040518083038186803b1580156105d857600080fd5b505afa1580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106109190610986565b81111561062f5760405162461bcd60e51b81526004016101ae90610af6565b505050505050565b6000546001600160a01b031690565b6002546001600160a01b031681565b61065d6107ab565b6001600160a01b0381166106835760405162461bcd60e51b81526004016101ae90610a01565b61068c816107ea565b50565b6106976107ab565b60005b818110156103be5760008383838181106106c457634e487b7160e01b600052603260045260246000fd5b90506020020160208101906106d99190610887565b6001600160a01b031614156107005760405162461bcd60e51b81526004016101ae90610ad0565b60006005600085858581811061072657634e487b7160e01b600052603260045260246000fd5b905060200201602081019061073b9190610887565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558061076d81610b9f565b91505061069a565b60035481565b6002600154141561079e5760405162461bcd60e51b81526004016101ae90610b47565b6002600155565b60018055565b6107b361083a565b6001600160a01b03166107c4610637565b6001600160a01b0316146102d65760405162461bcd60e51b81526004016101ae90610a9b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b60008083601f84011261084f578182fd5b50813567ffffffffffffffff811115610866578182fd5b602083019150836020808302850101111561088057600080fd5b9250929050565b600060208284031215610898578081fd5b81356001600160a01b03811681146108ae578182fd5b9392505050565b600080602083850312156108c7578081fd5b823567ffffffffffffffff8111156108dd578182fd5b6108e98582860161083e565b90969095509350505050565b60008060008060006060868803121561090c578081fd5b853567ffffffffffffffff80821115610923578283fd5b61092f89838a0161083e565b90975095506020880135915080821115610947578283fd5b506109548882890161083e565b96999598509660400135949350505050565b600060208284031215610977578081fd5b815180151581146108ae578182fd5b600060208284031215610997578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b602080825260119082015270626c6f636b20646174612065786973747360781b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252600a9082015269189b1858dac81b1a5cdd60b21b604082015260600190565b6020808252601690820152750c8d2cccccae4cadce840c2e4e4c2f240d8cadccee8d60531b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600c908201526b7a65726f206164647265737360a01b604082015260600190565b602080825260149082015273696e73756666696369656e742062616c616e636560601b604082015260600190565b602080825260099082015268302062616c616e636560b81b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b60008219821115610b9a57610b9a610bba565b500190565b6000600019821415610bb357610bb3610bba565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202a3483e72c7b3b33fa7b64457bf1d4daee2a865293eaf0d5870ff7c83344872664736f6c63430008000033";

type ProofOfValueActivityMiningConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProofOfValueActivityMiningConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProofOfValueActivityMining__factory extends ContractFactory {
  constructor(...args: ProofOfValueActivityMiningConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProofOfValueActivityMining> {
    return super.deploy(
      rewardToken,
      overrides || {}
    ) as Promise<ProofOfValueActivityMining>;
  }
  override getDeployTransaction(
    rewardToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(rewardToken, overrides || {});
  }
  override attach(address: string): ProofOfValueActivityMining {
    return super.attach(address) as ProofOfValueActivityMining;
  }
  override connect(signer: Signer): ProofOfValueActivityMining__factory {
    return super.connect(signer) as ProofOfValueActivityMining__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProofOfValueActivityMiningInterface {
    return new utils.Interface(_abi) as ProofOfValueActivityMiningInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProofOfValueActivityMining {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProofOfValueActivityMining;
  }
}

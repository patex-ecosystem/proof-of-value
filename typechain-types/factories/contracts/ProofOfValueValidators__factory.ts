/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ProofOfValueValidators,
  ProofOfValueValidatorsInterface,
} from "../../contracts/ProofOfValueValidators";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardsDistribution",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "array",
        type: "address[]",
      },
    ],
    name: "AddBlackList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "array",
        type: "address[]",
      },
    ],
    name: "AddWhiteList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
    ],
    name: "PauseChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "array",
        type: "address[]",
      },
    ],
    name: "RemoveBlackList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "array",
        type: "address[]",
      },
    ],
    name: "RemoveWhiteList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
  {
    constant: false,
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "adminAddBlackList",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "adminAddWhiteList",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "adminRemoveBlackList",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "adminRemoveWhiteList",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "blackList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "exit",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "getReward",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "lastPauseTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "maxStakersAmount",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "minStakeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "rewardsDistribution",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "rewardsDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_rewardsDistribution",
        type: "address",
      },
    ],
    name: "setRewardsDistribution",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardsDuration",
        type: "uint256",
      },
    ],
    name: "setRewardsDuration",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalStakers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whiteList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060055560006006556202a3006007556000600a5534801561002657600080fd5b506040516123763803806123768339818101604052606081101561004957600080fd5b50805160208201516040909201516001600055909190826001600160a01b0381166100bb576040805162461bcd60e51b815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040805160008152602081019290925280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a1506001546001600160a01b0316610167576040805162461bcd60e51b815260206004820152601160248201527013dddb995c881b5d5cdd081899481cd95d607a1b604482015290519081900360640190fd5b60048054610100600160a81b0319166101006001600160a01b0393841602179055601180546001600160a01b03191692909116919091179055506121c6806101b06000396000f3fe6080604052600436106102245760003560e01c806379ba509711610123578063a694fc3a116100ab578063e89c4bff1161006f578063e89c4bff146107c2578063e9fad8ee146107ed578063ebe2b12b14610802578063f188768414610817578063f5ec54031461082c57610224565b8063a694fc3a1461072f578063c8f33c9114610759578063cc1a378f1461076e578063cd3daf9d14610798578063df136d65146107ad57610224565b80638980f11f116100f25780638980f11f1461061e5780638b876347146106575780638da5cb5b1461068a57806391b4ded91461069f578063983977c1146106b457610224565b806379ba5097146105ca5780637b0a47ee146105df57806380faa57d146105f4578063869890381461060957610224565b8063372c12b1116101b15780635252a359116101755780635252a359146104dd57806353a47bb7146105585780635c975abb1461056d57806370a082311461058257806372f702f3146105b557610224565b8063372c12b114610408578063386a95251461044f5780633d18b912146104645780633fc6df6e146104795780634838d165146104aa57610224565b806318160ddd116101f857806318160ddd14610306578063197621431461031b5780631c1f78eb1461034e57806322ee108e146103635780632e1a7d4d146103de57610224565b80628cc2621461022f5780630700037d146102745780631627540c146102a757806316c38b3c146102da575b61022d346108a7565b005b34801561023b57600080fd5b506102626004803603602081101561025257600080fd5b50356001600160a01b0316610a8c565b60408051918252519081900360200190f35b34801561028057600080fd5b506102626004803603602081101561029757600080fd5b50356001600160a01b0316610b16565b3480156102b357600080fd5b5061022d600480360360208110156102ca57600080fd5b50356001600160a01b0316610b28565b3480156102e657600080fd5b5061022d600480360360208110156102fd57600080fd5b50351515610b84565b34801561031257600080fd5b50610262610bfe565b34801561032757600080fd5b5061022d6004803603602081101561033e57600080fd5b50356001600160a01b0316610c05565b34801561035a57600080fd5b50610262610c2f565b34801561036f57600080fd5b5061022d6004803603602081101561038657600080fd5b810190602081018135600160201b8111156103a057600080fd5b8201836020820111156103b257600080fd5b803590602001918460208302840111600160201b831117156103d357600080fd5b509092509050610c4d565b3480156103ea57600080fd5b5061022d6004803603602081101561040157600080fd5b5035610dc8565b34801561041457600080fd5b5061043b6004803603602081101561042b57600080fd5b50356001600160a01b0316610fc6565b604080519115158252519081900360200190f35b34801561045b57600080fd5b50610262610fdb565b34801561047057600080fd5b5061022d610fe1565b34801561048557600080fd5b5061048e6111e2565b604080516001600160a01b039092168252519081900360200190f35b3480156104b657600080fd5b5061043b600480360360208110156104cd57600080fd5b50356001600160a01b03166111f1565b3480156104e957600080fd5b5061022d6004803603602081101561050057600080fd5b810190602081018135600160201b81111561051a57600080fd5b82018360208201111561052c57600080fd5b803590602001918460208302840111600160201b8311171561054d57600080fd5b509092509050611206565b34801561056457600080fd5b5061048e611335565b34801561057957600080fd5b5061043b611344565b34801561058e57600080fd5b50610262600480360360208110156105a557600080fd5b50356001600160a01b031661134d565b3480156105c157600080fd5b5061048e611368565b3480156105d657600080fd5b5061022d61137c565b3480156105eb57600080fd5b50610262611438565b34801561060057600080fd5b5061026261143e565b34801561061557600080fd5b50610262611456565b34801561062a57600080fd5b5061022d6004803603604081101561064157600080fd5b506001600160a01b03813516906020013561145c565b34801561066357600080fd5b506102626004803603602081101561067a57600080fd5b50356001600160a01b031661151e565b34801561069657600080fd5b5061048e611530565b3480156106ab57600080fd5b5061026261153f565b3480156106c057600080fd5b5061022d600480360360208110156106d757600080fd5b810190602081018135600160201b8111156106f157600080fd5b82018360208201111561070357600080fd5b803590602001918460208302840111600160201b8311171561072457600080fd5b509092509050611545565b34801561073b57600080fd5b5061022d6004803603602081101561075257600080fd5b50356116c2565b34801561076557600080fd5b50610262611950565b34801561077a57600080fd5b5061022d6004803603602081101561079157600080fd5b5035611956565b3480156107a457600080fd5b506102626119d9565b3480156107b957600080fd5b50610262611a33565b3480156107ce57600080fd5b506107d7611a39565b6040805160ff9092168252519081900360200190f35b3480156107f957600080fd5b5061022d611a3e565b34801561080e57600080fd5b50610262611a61565b34801561082357600080fd5b50610262611a67565b34801561083857600080fd5b5061022d6004803603602081101561084f57600080fd5b810190602081018135600160201b81111561086957600080fd5b82018360208201111561087b57600080fd5b803590602001918460208302840111600160201b8311171561089c57600080fd5b509092509050611a74565b6011546001600160a01b031633146108f05760405162461bcd60e51b815260040180806020018281038252602a81526020018061211d602a913960400191505060405180910390fd5b60006108fa6119d9565b60095561090561143e565b6008556001600160a01b0381161561094c5761092081610a8c565b6001600160a01b0382166000908152600d6020908152604080832093909355600954600c909152919020555b60055442106109715760075461096990839063ffffffff611ba316565b6006556109cc565b600554600090610987904263ffffffff611c0d16565b905060006109a060065483611c6a90919063ffffffff16565b6007549091506109c6906109ba868463ffffffff611cca16565b9063ffffffff611ba316565b60065550505b60075447906109e290829063ffffffff611ba316565b6006541115610a38576040805162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f20686967680000000000000000604482015290519081900360640190fd5b426008819055600754610a51919063ffffffff611cca16565b6005556040805184815290517fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9181900360200190a1505050565b6001600160a01b0381166000908152600d6020908152604080832054600c909252822054610b109190610b0490670de0b6b3a7640000906109ba90610adf90610ad36119d9565b9063ffffffff611c0d16565b6001600160a01b0388166000908152600e60205260409020549063ffffffff611c6a16565b9063ffffffff611cca16565b92915050565b600d6020526000908152604090205481565b610b30611d24565b600280546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229181900360200190a150565b610b8c611d24565b60045460ff1615158115151415610ba257610bfb565b6004805460ff1916821515179081905560ff1615610bbf57426003555b6004546040805160ff90921615158252517f8fb6c181ee25a520cf3dd6565006ef91229fcfe5a989566c2a3b8c115570cec59181900360200190a15b50565b600b545b90565b610c0d611d24565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b6000610c48600754600654611c6a90919063ffffffff16565b905090565b610c55611d24565b600a805482019081905560641015610ca1576040805162461bcd60e51b815260206004820152600a602482015269696d706f737369626c6560b01b604482015290519081900360640190fd5b60005b81811015610d60576000838383818110610cba57fe5b905060200201356001600160a01b03166001600160a01b03161415610d15576040805162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b604482015290519081900360640190fd5b6001600f6000858585818110610d2757fe5b602090810292909201356001600160a01b0316835250810191909152604001600020805460ff1916911515919091179055600101610ca4565b507f31a21fc681afd4f39621f4d7401bae50b4356d27c92b3bf836cb441cb9e8222a828260405180806020018281038252848482818152602001925060200280828437600083820152604051601f909101601f19169092018290039550909350505050a15050565b600080546001019081905533610ddc6119d9565b600955610de761143e565b6008556001600160a01b03811615610e2e57610e0281610a8c565b6001600160a01b0382166000908152600d6020908152604080832093909355600954600c909152919020555b3360009081526010602052604090205460ff1615610e80576040805162461bcd60e51b815260206004820152600a602482015269189b1858dac81b1a5cdd60b21b604482015290519081900360640190fd5b60008311610ec9576040805162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015290519081900360640190fd5b600b54610edc908463ffffffff611c0d16565b600b55336000908152600e6020526040902054610eff908463ffffffff611c0d16565b336000818152600e6020526040902091909155600454610f35916101009091046001600160a01b0316908563ffffffff611d6d16565b60408051848152905133917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a2506000548114610fc2576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b5050565b600f6020526000908152604090205460ff1681565b60075481565b600080546001019081905533610ff56119d9565b60095561100061143e565b6008556001600160a01b038116156110475761101b81610a8c565b6001600160a01b0382166000908152600d6020908152604080832093909355600954600c909152919020555b3360009081526010602052604090205460ff1615611099576040805162461bcd60e51b815260206004820152600a602482015269189b1858dac81b1a5cdd60b21b604482015290519081900360640190fd5b336000908152600d6020526040902054801561118a57336000818152600d60205260408082208290555190919083908381818185875af1925050503d8060008114611100576040519150601f19603f3d011682016040523d82523d6000602084013e611105565b606091505b5050905080611152576040805162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b604482015290519081900360640190fd5b60408051838152905133917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a2505b50506000548114610bfb576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b6011546001600160a01b031681565b60106020526000908152604090205460ff1681565b61120e611d24565b60005b818110156112cd57600083838381811061122757fe5b905060200201356001600160a01b03166001600160a01b03161415611282576040805162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b604482015290519081900360640190fd5b60016010600085858581811061129457fe5b602090810292909201356001600160a01b0316835250810191909152604001600020805460ff1916911515919091179055600101611211565b507f782ab6425609ad3637bd4fc24e62e31fdb5c5373371fefa9dbd84e65938b62a6828260405180806020018281038252848482818152602001925060200280828437600083820152604051601f909101601f19169092018290039550909350505050a15050565b6002546001600160a01b031681565b60045460ff1681565b6001600160a01b03166000908152600e602052604090205490565b60045461010090046001600160a01b031681565b6002546001600160a01b031633146113c55760405162461bcd60e51b815260040180806020018281038252603581526020018061203b6035913960400191505060405180910390fd5b600154600254604080516001600160a01b03938416815292909116602083015280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a160028054600180546001600160a01b03199081166001600160a01b03841617909155169055565b60065481565b6000600554421061145157600554610c48565b504290565b600a5481565b611464611d24565b6004546001600160a01b038381166101009092041614156114b65760405162461bcd60e51b81526004018080602001828103825260218152602001806121716021913960400191505060405180910390fd5b6001546114d6906001600160a01b0384811691168363ffffffff611d6d16565b604080516001600160a01b03841681526020810183905281517f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28929181900390910190a15050565b600c6020526000908152604090205481565b6001546001600160a01b031681565b60035481565b61154d611d24565b600a80548290039055600a546064101561159b576040805162461bcd60e51b815260206004820152600a602482015269696d706f737369626c6560b01b604482015290519081900360640190fd5b60005b8181101561165a5760008383838181106115b457fe5b905060200201356001600160a01b03166001600160a01b0316141561160f576040805162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b604482015290519081900360640190fd5b6000600f600085858581811061162157fe5b602090810292909201356001600160a01b0316835250810191909152604001600020805460ff191691151591909117905560010161159e565b507f2b30b5d8017ecb83c2835b253185463276c922675cfcaa2cd2be6e256fa7abea828260405180806020018281038252848482818152602001925060200280828437600083820152604051601f909101601f19169092018290039550909350505050a15050565b600080546001019081905560045460ff161561170f5760405162461bcd60e51b815260040180806020018281038252603c8152602001806120c0603c913960400191505060405180910390fd5b336117186119d9565b60095561172361143e565b6008556001600160a01b0381161561176a5761173e81610a8c565b6001600160a01b0382166000908152600d6020908152604080832093909355600954600c909152919020555b336000908152600f602052604090205460ff166117bc576040805162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b604482015290519081900360640190fd5b3360009081526010602052604090205460ff161561180e576040805162461bcd60e51b815260206004820152600a602482015269189b1858dac81b1a5cdd60b21b604482015290519081900360640190fd5b68056bc75e2d631000008310156118565760405162461bcd60e51b81526004018080602001828103825260218152602001806120fc6021913960400191505060405180910390fd5b600b54611869908463ffffffff611cca16565b600b55336000908152600e602052604090205461188c908463ffffffff611cca16565b336000818152600e60205260409020919091556004546118c3916101009091046001600160a01b031690308663ffffffff611dc416565b60408051848152905133917f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d919081900360200190a2506000548114610fc2576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60085481565b61195e611d24565b600554421161199e5760405162461bcd60e51b8152600401808060200182810382526058815260200180611fe36058913960600191505060405180910390fd5b60078190556040805182815290517ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d39181900360200190a150565b6000600b54600014156119ef5750600954610c02565b610c48611a24600b546109ba670de0b6b3a7640000611a18600654611a18600854610ad361143e565b9063ffffffff611c6a16565b6009549063ffffffff611cca16565b60095481565b606481565b336000908152600e6020526040902054611a5790610dc8565b611a5f610fe1565b565b60055481565b68056bc75e2d6310000081565b611a7c611d24565b60005b81811015611b3b576000838383818110611a9557fe5b905060200201356001600160a01b03166001600160a01b03161415611af0576040805162461bcd60e51b815260206004820152600c60248201526b7a65726f206164647265737360a01b604482015290519081900360640190fd5b600060106000858585818110611b0257fe5b602090810292909201356001600160a01b0316835250810191909152604001600020805460ff1916911515919091179055600101611a7f565b507f31c7e26beb5714ffd5fa1cd430e11f933063c272989017d044467710572c4c30828260405180806020018281038252848482818152602001925060200280828437600083820152604051601f909101601f19169092018290039550909350505050a15050565b6000808211611bf9576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481611c0457fe5b04949350505050565b600082821115611c64576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082611c7957506000610b10565b82820282848281611c8657fe5b0414611cc35760405162461bcd60e51b815260040180806020018281038252602181526020018061209f6021913960400191505060405180910390fd5b9392505050565b600082820183811015611cc3576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001546001600160a01b03163314611a5f5760405162461bcd60e51b815260040180806020018281038252602f815260200180612070602f913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611dbf908490611e24565b505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611e1e908590611e24565b50505050565b611e36826001600160a01b0316611fdc565b611e87576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310611ec55780518252601f199092019160209182019101611ea6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611f27576040519150601f19603f3d011682016040523d82523d6000602084013e611f2c565b606091505b509150915081611f83576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115611e1e57808060200190516020811015611f9f57600080fd5b5051611e1e5760405162461bcd60e51b815260040180806020018281038252602a815260200180612147602a913960400191505060405180910390fd5b3b15159056fe50726576696f7573207265776172647320706572696f64206d75737420626520636f6d706c657465206265666f7265206368616e67696e6720746865206475726174696f6e20666f7220746865206e657720706572696f64596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e6572736869704f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775468697320616374696f6e2063616e6e6f7420626520706572666f726d6564207768696c652074686520636f6e74726163742069732070617573656443616e6e6f74207374616b65206c657373207468656e2031303020746f6b656e7343616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e74726163745361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656443616e6e6f7420776974686472617720746865207374616b696e6720746f6b656ea265627a7a72315820923ed32fc0601104e214d20cacbeba6c87df631937157d9da6eb9d7c5cdc43ec64736f6c63430005100032";

type ProofOfValueValidatorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProofOfValueValidatorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProofOfValueValidators__factory extends ContractFactory {
  constructor(...args: ProofOfValueValidatorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _rewardsDistribution: PromiseOrValue<string>,
    _stakingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProofOfValueValidators> {
    return super.deploy(
      _owner,
      _rewardsDistribution,
      _stakingToken,
      overrides || {}
    ) as Promise<ProofOfValueValidators>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _rewardsDistribution: PromiseOrValue<string>,
    _stakingToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _rewardsDistribution,
      _stakingToken,
      overrides || {}
    );
  }
  override attach(address: string): ProofOfValueValidators {
    return super.attach(address) as ProofOfValueValidators;
  }
  override connect(signer: Signer): ProofOfValueValidators__factory {
    return super.connect(signer) as ProofOfValueValidators__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProofOfValueValidatorsInterface {
    return new utils.Interface(_abi) as ProofOfValueValidatorsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProofOfValueValidators {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProofOfValueValidators;
  }
}
